server {
    listen       80;
    listen  [::]:80;
    server_name  _;
}

server {
    listen       80;
    listen  [::]:80;
    server_name  ssi-hub.org;

    location = /auth {
        proxy_pass http://auth-server/auth;
    }

    location = /auth/login {
        proxy_pass http://auth-server/auth/login;
    }

    location = /auth/login/siwe/initiate {
        proxy_pass http://auth-server/auth/login/siwe/initiate;
    }

    location = /auth/login/siwe/verify {
        proxy_pass http://auth-server/auth/login/siwe/verify;
    }

    location = /auth/logout {
        proxy_pass http://auth-server/auth/logout;
    }

    location = /auth/refresh-token {
        proxy_pass http://auth-server/auth/refresh-token;
    }

#     you can enable and if necessary extend this rule to include any exceptions
#     for files fetched by a web browser without Authorization header
#
#     WARNIG!!!
#     Test carefully after changing this. Any mistakes here may result in disabling authentication completely
#     location ~* ^.*\.(css|js|html|htm)$ {
#        proxy_pass http://backend;
#     }

    location / {
        auth_request /token_introspection;
        proxy_pass http://backend-1;
    }

    location = /token_introspection {
        internal;
        proxy_method      GET;
        proxy_set_header  Authorization "$http_authorization";
        proxy_set_header  Content-Length "";
        proxy_pass        http://auth-server/auth/token-introspection;
    }
}

server {
    listen       80;
    listen  [::]:80;
    server_name  miner-data.org;

    location / {
        auth_request /token_introspection;
        proxy_pass http://backend-2;
    }

    location = /token_introspection {
        internal;
        proxy_method      GET;
        proxy_set_header  Authorization "$http_authorization";
        proxy_set_header  Content-Length "";
        proxy_pass        http://auth-server/auth/token-introspection;
    }
}
