server {
    listen       80;
    listen  [::]:80;
    server_name  _;

    location /auth {
        proxy_pass http://auth-server;
    }

    location /api-auth {
        proxy_pass http://auth-server;
    }

    location /auth/healthcheck {
        proxy_pass http://auth-server/healthcheck;
    }

    location /api {
        proxy_pass http://host.docker.internal:3000; # this is a gp4btc backend
    }

    location / {
        auth_request /token_introspection;
        proxy_pass http://host.docker.internal:3000;  # this is a gp4btc backend

        # WARNING!!!
        # gp4btc backend needs to have CORS headers disable completely,
        # otherwise they will duplicate and will not be accepted by browsers

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'http://localhost:4200' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'authorization' always;
            add_header 'Access-Control-Max-Age' '60' always;
            return 200;
        }

        if ($request_method = 'POST') {
            add_header 'Access-Control-Allow-Origin' 'http://localhost:4200' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin' 'http://localhost:4200' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        if ($request_method = 'PUT') {
            add_header 'Access-Control-Allow-Origin' 'http://localhost:4200' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        if ($request_method = 'PATCH') {
            add_header 'Access-Control-Allow-Origin' 'http://localhost:4200' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        if ($request_method = 'DELETE') {
            add_header 'Access-Control-Allow-Origin' 'http://localhost:4200' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }
    }

    location /explorer {
        proxy_pass http://host.docker.internal:3000; # this is a gp4btc backend

        # WARNING!!!
        # gp4btc backend needs to have CORS headers disable completely,
        # otherwise they will duplicate and will not be accepted by browsers

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'http://localhost:4200' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET,HEAD' always;
            add_header 'Access-Control-Allow-Headers' 'authorization' always;
            add_header 'Access-Control-Max-Age' '60' always;
            return 200;
        }

        if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin' 'http://localhost:4200' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }
    }

    location /gp4btc/healthcheck {
        proxy_pass http://host.docker.internal:3000/healthcheck; # this is a gp4btc backend
    }

    location = /token_introspection {
        internal;
        proxy_method      GET;
        proxy_set_header  Authorization "$http_authorization";
        proxy_set_header  Content-Length "";
        proxy_pass        http://auth-server/auth/token-introspection;

        if ($request_method = OPTIONS) {
            # forwarding OPTIONS requests to the backend without authorization
            return 200;
        }
    }
}
